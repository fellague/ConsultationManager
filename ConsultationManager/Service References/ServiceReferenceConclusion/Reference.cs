//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsultationManager.ServiceReferenceConclusion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceConclusion.IConclusionService")]
    public interface IConclusionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConclusionService/AddConclusion", ReplyAction="http://tempuri.org/IConclusionService/AddConclusionResponse")]
        ConsultationManagerServer.Models.Conclusion AddConclusion(ConsultationManagerServer.Models.Conclusion dossierMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConclusionService/AddConclusion", ReplyAction="http://tempuri.org/IConclusionService/AddConclusionResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.Conclusion> AddConclusionAsync(ConsultationManagerServer.Models.Conclusion dossierMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConclusionService/UpdateConclusion", ReplyAction="http://tempuri.org/IConclusionService/UpdateConclusionResponse")]
        ConsultationManagerServer.Models.Conclusion UpdateConclusion(ConsultationManagerServer.Models.Conclusion dossierMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConclusionService/UpdateConclusion", ReplyAction="http://tempuri.org/IConclusionService/UpdateConclusionResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.Conclusion> UpdateConclusionAsync(ConsultationManagerServer.Models.Conclusion dossierMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConclusionService/DeleteConclusion", ReplyAction="http://tempuri.org/IConclusionService/DeleteConclusionResponse")]
        void DeleteConclusion(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConclusionService/DeleteConclusion", ReplyAction="http://tempuri.org/IConclusionService/DeleteConclusionResponse")]
        System.Threading.Tasks.Task DeleteConclusionAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConclusionServiceChannel : ConsultationManager.ServiceReferenceConclusion.IConclusionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConclusionServiceClient : System.ServiceModel.ClientBase<ConsultationManager.ServiceReferenceConclusion.IConclusionService>, ConsultationManager.ServiceReferenceConclusion.IConclusionService {
        
        public ConclusionServiceClient() {
        }
        
        public ConclusionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConclusionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConclusionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConclusionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsultationManagerServer.Models.Conclusion AddConclusion(ConsultationManagerServer.Models.Conclusion dossierMed) {
            return base.Channel.AddConclusion(dossierMed);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.Conclusion> AddConclusionAsync(ConsultationManagerServer.Models.Conclusion dossierMed) {
            return base.Channel.AddConclusionAsync(dossierMed);
        }
        
        public ConsultationManagerServer.Models.Conclusion UpdateConclusion(ConsultationManagerServer.Models.Conclusion dossierMed) {
            return base.Channel.UpdateConclusion(dossierMed);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.Conclusion> UpdateConclusionAsync(ConsultationManagerServer.Models.Conclusion dossierMed) {
            return base.Channel.UpdateConclusionAsync(dossierMed);
        }
        
        public void DeleteConclusion(string id) {
            base.Channel.DeleteConclusion(id);
        }
        
        public System.Threading.Tasks.Task DeleteConclusionAsync(string id) {
            return base.Channel.DeleteConclusionAsync(id);
        }
    }
}
