//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsultationManager.ServiceReferenceConsultation {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceConsultation.IConsultationService")]
    public interface IConsultationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetServiceDetails", ReplyAction="http://tempuri.org/IConsultationService/GetServiceDetailsResponse")]
        ConsultationManagerServer.Models.SerializedModels.ServicePathologies GetServiceDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetServiceDetails", ReplyAction="http://tempuri.org/IConsultationService/GetServiceDetailsResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.ServicePathologies> GetServiceDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/AddPathologie", ReplyAction="http://tempuri.org/IConsultationService/AddPathologieResponse")]
        ConsultationManagerServer.Models.Consultation AddPathologie(ConsultationManagerServer.Models.Consultation pathologie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/AddPathologie", ReplyAction="http://tempuri.org/IConsultationService/AddPathologieResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.Consultation> AddPathologieAsync(ConsultationManagerServer.Models.Consultation pathologie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/UpdatePathologie", ReplyAction="http://tempuri.org/IConsultationService/UpdatePathologieResponse")]
        ConsultationManagerServer.Models.Consultation UpdatePathologie(string id, ConsultationManagerServer.Models.Consultation pathologie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/UpdatePathologie", ReplyAction="http://tempuri.org/IConsultationService/UpdatePathologieResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.Consultation> UpdatePathologieAsync(string id, ConsultationManagerServer.Models.Consultation pathologie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/UpdateService", ReplyAction="http://tempuri.org/IConsultationService/UpdateServiceResponse")]
        ConsultationManagerServer.Models.Service UpdateService(string id, ConsultationManagerServer.Models.Service service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/UpdateService", ReplyAction="http://tempuri.org/IConsultationService/UpdateServiceResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.Service> UpdateServiceAsync(string id, ConsultationManagerServer.Models.Service service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/DeletePathologie", ReplyAction="http://tempuri.org/IConsultationService/DeletePathologieResponse")]
        void DeletePathologie(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/DeletePathologie", ReplyAction="http://tempuri.org/IConsultationService/DeletePathologieResponse")]
        System.Threading.Tasks.Task DeletePathologieAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConsultationServiceChannel : ConsultationManager.ServiceReferenceConsultation.IConsultationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultationServiceClient : System.ServiceModel.ClientBase<ConsultationManager.ServiceReferenceConsultation.IConsultationService>, ConsultationManager.ServiceReferenceConsultation.IConsultationService {
        
        public ConsultationServiceClient() {
        }
        
        public ConsultationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConsultationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsultationManagerServer.Models.SerializedModels.ServicePathologies GetServiceDetails() {
            return base.Channel.GetServiceDetails();
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.ServicePathologies> GetServiceDetailsAsync() {
            return base.Channel.GetServiceDetailsAsync();
        }
        
        public ConsultationManagerServer.Models.Consultation AddPathologie(ConsultationManagerServer.Models.Consultation pathologie) {
            return base.Channel.AddPathologie(pathologie);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.Consultation> AddPathologieAsync(ConsultationManagerServer.Models.Consultation pathologie) {
            return base.Channel.AddPathologieAsync(pathologie);
        }
        
        public ConsultationManagerServer.Models.Consultation UpdatePathologie(string id, ConsultationManagerServer.Models.Consultation pathologie) {
            return base.Channel.UpdatePathologie(id, pathologie);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.Consultation> UpdatePathologieAsync(string id, ConsultationManagerServer.Models.Consultation pathologie) {
            return base.Channel.UpdatePathologieAsync(id, pathologie);
        }
        
        public ConsultationManagerServer.Models.Service UpdateService(string id, ConsultationManagerServer.Models.Service service) {
            return base.Channel.UpdateService(id, service);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.Service> UpdateServiceAsync(string id, ConsultationManagerServer.Models.Service service) {
            return base.Channel.UpdateServiceAsync(id, service);
        }
        
        public void DeletePathologie(string id) {
            base.Channel.DeletePathologie(id);
        }
        
        public System.Threading.Tasks.Task DeletePathologieAsync(string id) {
            return base.Channel.DeletePathologieAsync(id);
        }
    }
}
