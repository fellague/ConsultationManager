//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsultationManager.ServiceReferenceInterview {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceInterview.IInterviewService")]
    public interface IInterviewService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/AddInterview", ReplyAction="http://tempuri.org/IInterviewService/AddInterviewResponse")]
        ConsultationManagerServer.Models.Interview AddInterview(ConsultationManagerServer.Models.Interview dossierMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/AddInterview", ReplyAction="http://tempuri.org/IInterviewService/AddInterviewResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.Interview> AddInterviewAsync(ConsultationManagerServer.Models.Interview dossierMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/GetInterview", ReplyAction="http://tempuri.org/IInterviewService/GetInterviewResponse")]
        ConsultationManagerServer.Models.SerializedModels.InterviewDetail GetInterview(string idRdv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/GetInterview", ReplyAction="http://tempuri.org/IInterviewService/GetInterviewResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.InterviewDetail> GetInterviewAsync(string idRdv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/GetInterviews", ReplyAction="http://tempuri.org/IInterviewService/GetInterviewsResponse")]
        ConsultationManagerServer.Models.SerializedModels.InterviewDetail[] GetInterviews(ConsultationManagerServer.Models.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/GetInterviews", ReplyAction="http://tempuri.org/IInterviewService/GetInterviewsResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.InterviewDetail[]> GetInterviewsAsync(ConsultationManagerServer.Models.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/UpdateInterview", ReplyAction="http://tempuri.org/IInterviewService/UpdateInterviewResponse")]
        ConsultationManagerServer.Models.Interview UpdateInterview(ConsultationManagerServer.Models.Interview dossierMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/UpdateInterview", ReplyAction="http://tempuri.org/IInterviewService/UpdateInterviewResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.Interview> UpdateInterviewAsync(ConsultationManagerServer.Models.Interview dossierMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/DeleteInterview", ReplyAction="http://tempuri.org/IInterviewService/DeleteInterviewResponse")]
        void DeleteInterview(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterviewService/DeleteInterview", ReplyAction="http://tempuri.org/IInterviewService/DeleteInterviewResponse")]
        System.Threading.Tasks.Task DeleteInterviewAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInterviewServiceChannel : ConsultationManager.ServiceReferenceInterview.IInterviewService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InterviewServiceClient : System.ServiceModel.ClientBase<ConsultationManager.ServiceReferenceInterview.IInterviewService>, ConsultationManager.ServiceReferenceInterview.IInterviewService {
        
        public InterviewServiceClient() {
        }
        
        public InterviewServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InterviewServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterviewServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterviewServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsultationManagerServer.Models.Interview AddInterview(ConsultationManagerServer.Models.Interview dossierMed) {
            return base.Channel.AddInterview(dossierMed);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.Interview> AddInterviewAsync(ConsultationManagerServer.Models.Interview dossierMed) {
            return base.Channel.AddInterviewAsync(dossierMed);
        }
        
        public ConsultationManagerServer.Models.SerializedModels.InterviewDetail GetInterview(string idRdv) {
            return base.Channel.GetInterview(idRdv);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.InterviewDetail> GetInterviewAsync(string idRdv) {
            return base.Channel.GetInterviewAsync(idRdv);
        }
        
        public ConsultationManagerServer.Models.SerializedModels.InterviewDetail[] GetInterviews(ConsultationManagerServer.Models.Patient patient) {
            return base.Channel.GetInterviews(patient);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.InterviewDetail[]> GetInterviewsAsync(ConsultationManagerServer.Models.Patient patient) {
            return base.Channel.GetInterviewsAsync(patient);
        }
        
        public ConsultationManagerServer.Models.Interview UpdateInterview(ConsultationManagerServer.Models.Interview dossierMed) {
            return base.Channel.UpdateInterview(dossierMed);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.Interview> UpdateInterviewAsync(ConsultationManagerServer.Models.Interview dossierMed) {
            return base.Channel.UpdateInterviewAsync(dossierMed);
        }
        
        public void DeleteInterview(string id) {
            base.Channel.DeleteInterview(id);
        }
        
        public System.Threading.Tasks.Task DeleteInterviewAsync(string id) {
            return base.Channel.DeleteInterviewAsync(id);
        }
    }
}
