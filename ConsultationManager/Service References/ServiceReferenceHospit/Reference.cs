//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsultationManager.ServiceReferenceHospit {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceHospit.IHospitService")]
    public interface IHospitService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/AddHospit", ReplyAction="http://tempuri.org/IHospitService/AddHospitResponse")]
        ConsultationManagerServer.Models.Hospitalisations.Hospitalisation AddHospit(ConsultationManagerServer.Models.Hospitalisations.Hospitalisation hospit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/AddHospit", ReplyAction="http://tempuri.org/IHospitService/AddHospitResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.Hospitalisations.Hospitalisation> AddHospitAsync(ConsultationManagerServer.Models.Hospitalisations.Hospitalisation hospit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/GetDemandesHospit", ReplyAction="http://tempuri.org/IHospitService/GetDemandesHospitResponse")]
        ConsultationManagerServer.Models.SerializedModels.DemandeHospitDetail[] GetDemandesHospit(string idService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/GetDemandesHospit", ReplyAction="http://tempuri.org/IHospitService/GetDemandesHospitResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.DemandeHospitDetail[]> GetDemandesHospitAsync(string idService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/GetHospits", ReplyAction="http://tempuri.org/IHospitService/GetHospitsResponse")]
        ConsultationManagerServer.Models.SerializedModels.HospitalisationDetail[] GetHospits(string idService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/GetHospits", ReplyAction="http://tempuri.org/IHospitService/GetHospitsResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.HospitalisationDetail[]> GetHospitsAsync(string idService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/UpdateHospit", ReplyAction="http://tempuri.org/IHospitService/UpdateHospitResponse")]
        ConsultationManagerServer.Models.Hospitalisations.Hospitalisation UpdateHospit(ConsultationManagerServer.Models.Hospitalisations.Hospitalisation salle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/UpdateHospit", ReplyAction="http://tempuri.org/IHospitService/UpdateHospitResponse")]
        System.Threading.Tasks.Task<ConsultationManagerServer.Models.Hospitalisations.Hospitalisation> UpdateHospitAsync(ConsultationManagerServer.Models.Hospitalisations.Hospitalisation salle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/DeleteHospit", ReplyAction="http://tempuri.org/IHospitService/DeleteHospitResponse")]
        void DeleteHospit(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitService/DeleteHospit", ReplyAction="http://tempuri.org/IHospitService/DeleteHospitResponse")]
        System.Threading.Tasks.Task DeleteHospitAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHospitServiceChannel : ConsultationManager.ServiceReferenceHospit.IHospitService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HospitServiceClient : System.ServiceModel.ClientBase<ConsultationManager.ServiceReferenceHospit.IHospitService>, ConsultationManager.ServiceReferenceHospit.IHospitService {
        
        public HospitServiceClient() {
        }
        
        public HospitServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HospitServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsultationManagerServer.Models.Hospitalisations.Hospitalisation AddHospit(ConsultationManagerServer.Models.Hospitalisations.Hospitalisation hospit) {
            return base.Channel.AddHospit(hospit);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.Hospitalisations.Hospitalisation> AddHospitAsync(ConsultationManagerServer.Models.Hospitalisations.Hospitalisation hospit) {
            return base.Channel.AddHospitAsync(hospit);
        }
        
        public ConsultationManagerServer.Models.SerializedModels.DemandeHospitDetail[] GetDemandesHospit(string idService) {
            return base.Channel.GetDemandesHospit(idService);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.DemandeHospitDetail[]> GetDemandesHospitAsync(string idService) {
            return base.Channel.GetDemandesHospitAsync(idService);
        }
        
        public ConsultationManagerServer.Models.SerializedModels.HospitalisationDetail[] GetHospits(string idService) {
            return base.Channel.GetHospits(idService);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.SerializedModels.HospitalisationDetail[]> GetHospitsAsync(string idService) {
            return base.Channel.GetHospitsAsync(idService);
        }
        
        public ConsultationManagerServer.Models.Hospitalisations.Hospitalisation UpdateHospit(ConsultationManagerServer.Models.Hospitalisations.Hospitalisation salle) {
            return base.Channel.UpdateHospit(salle);
        }
        
        public System.Threading.Tasks.Task<ConsultationManagerServer.Models.Hospitalisations.Hospitalisation> UpdateHospitAsync(ConsultationManagerServer.Models.Hospitalisations.Hospitalisation salle) {
            return base.Channel.UpdateHospitAsync(salle);
        }
        
        public void DeleteHospit(string id) {
            base.Channel.DeleteHospit(id);
        }
        
        public System.Threading.Tasks.Task DeleteHospitAsync(string id) {
            return base.Channel.DeleteHospitAsync(id);
        }
    }
}
